name: docker-mysql-backup

on:
  push:
  pull_request:

jobs:
  slack-start:
    name: Notify Slack of Testing Start
    runs-on: ubuntu-latest
    steps:
      - uses: 8398a7/action-slack@v3
        with:
          status: custom
          fields: workflow,commit,repo,author,action,message
          custom_payload: |
            {
              attachments: [{
                color: 'good',
                text: `${process.env.AS_REPO}\nBuild Started (${process.env.AS_ACTION})\n${process.env.AS_MESSAGE}\n${process.env.AS_COMMIT} by ${process.env.AS_AUTHOR}`,
              }]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always()

  build-push-image:
    name: Build Image
    runs-on: ubuntu-latest
    needs: [slack-start]
    steps:
      - uses: actions/checkout@v3
      - uses: FranzDiebold/github-env-vars-action@v2
      -
        name: Get current time
        uses: josStorer/get-current-time@v2
        id: current-time
        with:
          format: YYYYMMDDHHMMSS
      -
        name: Set Tag
        env:
          TIMESTAMP: "${{ steps.current-time.outputs.formattedTime }}"
        run: echo "BUILD_IMAGE_TAG=$CI_SHA_SHORT-$TIMESTAMP" >> $GITHUB_ENV
      -
        name: Set Full Name
        env:
          TIMESTAMP: "${{ steps.current-time.outputs.formattedTime }}"
        run: echo "BUILD_IMAGE_FULL_NAME=ghcr.io/$CI_REPOSITORY_OWNER_SLUG/$CI_REPOSITORY_NAME:$CI_SHA_SHORT-$TIMESTAMP" >> $GITHUB_ENV
      -
        name: Set Full Branch Name
        env:
          TIMESTAMP: "${{ steps.current-time.outputs.formattedTime }}"
        run: echo "BUILD_IMAGE_BRANCH_NAME=ghcr.io/$CI_REPOSITORY_OWNER_SLUG/$CI_REPOSITORY_NAME:$CI_REF_NAME" >> $GITHUB_ENV
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ secrets.GH_CONTAINER_REGISTRY_USER }}
          password: ${{ secrets.GH_CONTAINER_REGISTRY_TOKEN }}
      -
        name: Build and push
        env:
          TIMESTAMP: "${{ steps.current-time.outputs.time }}"
        uses: docker/build-push-action@v3
        with:
          pull       : true
          push       : true
          platforms  : linux/amd64,linux/arm64/v8
          context    : .
          file       : ./Dockerfile
          tags       : ${{ env.BUILD_IMAGE_FULL_NAME }},${{ env.BUILD_IMAGE_BRANCH_NAME }}
          build-args: |
            BUILD_DATE=$TIMESTAMP
            VCS_REF=${{ env.CI_REF_NAME }}
            VERSION=${{ env.BUILD_IMAGE_TAG }}

  slack-results:
    name: Notify Slack of Build Results
    runs-on: ubuntu-latest
    needs: [build-push-image]
    steps:
      - uses: 8398a7/action-slack@v3
        with:
          status: custom
          fields: workflow,job,commit,repo,ref,author,took,action,message
          custom_payload: |
            {
              attachments: [{
                color: '${{ job.status }}' === 'success' ? 'good' : '${{ job.status }}' === 'failure' ? 'danger' : 'warning',
                text: `${process.env.AS_REPO}\nBuild/Deploy ${{ job.status }} in ${process.env.AS_TOOK}\n${process.env.AS_ACTION}\n${process.env.AS_MESSAGE}\n${process.env.AS_COMMIT} by ${process.env.AS_AUTHOR}`,
              }]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always()
